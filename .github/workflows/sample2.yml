# See https://stackoverflow.com/questions/65384420/how-to-make-a-github-action-matrix-element-conditional

name: Configurable Build Matrix 3

on:
  push:
  workflow_dispatch:
    inputs:
      check-windows:
        description: 'Test build on Windows'
        required: false
        default: 'false'
      check-mac:
        description: 'Test build on MacOS'
        required: false
        default: 'false'
      check-r-release-version-on-ubuntu:
        description: 'Check on Ubuntu using the release version of R'
        required: false
        default: 'false'
      check-r-devel-version-on-ubuntu:
        description: 'Check on Ubuntu using the development version of R'
        required: false
        default: 'false'

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        name: Conditional Build Matrix
        uses: JoshuaTheMiller/conditional-build-matrix@0.0.1
        with:          
          filter:
            '[?contains(runOnEvent, `${{ github.event_name }}`)
               || (contains(os, `"windows"`) && `${{ github.event.inputs.check-windows }}` == `true`)
               || (contains(os, `"macOS"`) && `${{ github.event.inputs.check-mac }}` == `true`)
               || (contains(os, `"ubuntu"`)
                   && ((contains(r, `"release"`) && `${{ github.event.inputs.check-r-release-version-on-ubuntu }}` == `true`)
                       || (contains(r, `"devel"`) && `${{ github.event.inputs.check-r-devel-version-on-ubuntu }}` == `true`)))]'

  display_matrix:
    needs: matrix_prep
    runs-on: ubuntu-latest
    steps:    
    - name: Report Configuration
      env:
        MATRIX_CONTEXT: ${{ needs.matrix_prep.outputs.matrix }}
      run: |
        echo "os: " ${{ matrix.os }}
        echo "matrix: $MATRIX_CONTEXT"

  build-n-test:
    if: >
      github.event_name != 'workflow_dispatch' ||
      github.event.inputs.check-windows == 'true' ||
      github.event.inputs.check-mac == 'true' ||
      github.event.inputs.check-r-release-version-on-ubuntu == 'true' ||
      github.event.inputs.check-r-devel-version-on-ubuntu == 'true'
    needs: matrix_prep
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    steps:
    - name: Report Configuration
      env:
        MATRIX_CONTEXT: ${{ toJSON(matrix) }}
      run: |
        echo "os: " ${{ matrix.os }}
        echo "matrix: $MATRIX_CONTEXT"
