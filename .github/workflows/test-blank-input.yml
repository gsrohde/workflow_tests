name: Test Blank Input

on:
  push:
  pull_request:
  workflow_dispatch:
    # When running manually, allow users to customize the run:
    inputs:
      check-manual:
        description: 'check the manual'
        required: false
        default: ''
      check-vignettes:
        description: 'check the vignettes'
        required: false
        default: ''
      run-tests:
        description: 'run the tests'
        required: false
        default: 'x'
      check-examples:
        description: 'check the examples'
        required: false
        default: 'x'

jobs:
  variable-passing:

    name: Variable Passing

    runs-on: ubuntu-latest

    steps:
      - name: Set Enviroment Variable
        run: |
          echo "EQ=${{github.event_name != 'workflow_dispatch' ||
                      github.event.inputs.check-vignettes != '' ||
                      github.event.inputs.check-manual != ''}}" >> $GITHUB_ENV
      
      - name: Use Environment Variable
        if: env.EQ == 'true'
        run: |
          echo "The value of EQ is ${{ env.EQ }}."
      - name: Debug
        run: |
          echo "EQ = $EQ"
          echo "The value of EQ is ${{ env.EQ }}."
          echo "github.event_name = ${{ github.event_name }}."
          echo "github.event.inputs.check-vignettes = ${{ github.event.inputs.check-vignettes }}."
          echo "github.event.inputs.check-manual = ${{ github.event.inputs.check-manual }}."
          echo "github.event.inputs.check-manual = ${{ github.event.inputs.run-tests }}."
          echo "github.event.inputs.check-manual = ${{ github.event.inputs.check-examples }}."

      - name: Dry Run
        run: |
          if ('${{ github.event_name }}' == 'workflow_dispatch') {
            build_args_value <- c()
            args_value <- c('--as-cran')
            if ('${{ github.event.inputs.check-manual }}' == '') {
              build_args_value <- append(build_args_value, '--no-manual')
              args_value <- append(args_value, '--no-manual')
            }
            if ('${{ github.event.inputs.check-vignettes }}' == '') {
              build_args_value <- append(build_args_value, '--no-build-vignettes')
              args_value <- append(args_value, '--ignore-vignettes')
            }
            if ('${{ github.event.inputs.run-tests }}' == '') {
              args_value <- append(args_value, '--no-tests')
            }
            if ('${{ github.event.inputs.check-examples }}' == '') {
              args_value <- append(args_value, '--no-examples')
            }
          } else {
            build_args_value <- c('--no-build-vignettes')
            args_value <- c('--as-cran', '--ignore-vignettes')
          }
          cat("Running rcmdcheck with",
                "\n  args =", args_value,
                "\n  build_args =", build_args_value,
                "\n  error_on = 'error', and",
                "\n  check_dir = 'check'\n")
          ## rcmdcheck::rcmdcheck(args = args_value,
          ##                      build_args = build_args_value,
          ##                      error_on = "error",
          ##                      check_dir = "check")
        shell: Rscript {0}
